name: Release Test

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    branches:
      - develop
  workflow_dispatch:

permissions:
  contents: write
    
jobs:
  build-x86_64:
    runs-on: ubuntu-latest
    container:
      # glibc version to 2.31
      image: ubuntu:20.04
    timeout-minutes: 30
    steps:
      - name: Update and install packages
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt-get update
          apt-get install -y unzip curl git autoconf build-essential ca-certificates tzdata jq
      - name: check glibc version
        run: ldd --version
      - name: Install rustup
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - name: install rust toolchain
        run: |
          rustup update --no-self-update stable
      - name: check version
        run: |
          rustc --version
          cargo --version
      - name: checkout
        uses: actions/checkout@v4
      - name: extract crate information
        shell: bash
        run: |
          rust_dir="rust_code"
          echo "RUST_DIR=$rust_dir" >> $GITHUB_ENV
          cd "$rust_dir"
          echo "PACKAGE_NAME=$(cargo read-manifest | jq '.name')" >> $GITHUB_ENV
      - name: build package
        shell: bash
        run: |
          cd ${{ env.RUST_DIR }}
          cargo build --release --bins
      - name: build archive
        shell: bash
        run: |
          dirname="${{ env.PACKAGE_NAME }}-${GITHUB_REF#refs/tags/}-x86_64-unknown-linux-gnu"
          mkdir "$dirname"
          bins=$(cargo read-manifest --manifest-path ${{ env.RUST_DIR }}/Cargo.toml | jq -r '.targets[] | select(.kind[] | contains("bin")) | .name')
          for bin_name in $bins; do
            echo "Packaging $bin_name ..."
            cp "${{ env.RUST_DIR }}/target/release/$bin_name" "$dirname"
          done
          tar -czf "$dirname.tar.gz" "$dirname"
          echo "ASSET_X86_64=$dirname.tar.gz" >> $GITHUB_ENV
      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ASSET_X86_64 }}
          path: ${{ env.ASSET_X86_64 }}
  
  create-release:
    needs: [build-x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: download x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ASSET_X86_64 }}
      - name: release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: ${{ env.ASSET_X86_64 }}
